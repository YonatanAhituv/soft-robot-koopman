data = struct;
data.train = zeros(11);
for j = 1:11
    % Simulation parameters
    dt = 0.01;  % time step
    t_end = 10; % total simulation time
    t = 0:dt:t_end; % time vector
    
    % Initial condition
    x0 = rand; % random initial condition between 0 and 1
    x = zeros(size(t)); % preallocate state vector
    x(1) = x0; % set initial condition
    
    % Input u: sinusoidal function
    u = sin(t);
    u_vals = zeros(size(t));
    
    % Simulation using Euler method
    for i = 1:length(t)-1
        dx = -x(i) + u(i); % compute derivative
        u_vals(i) = u(i);
        x(i+1) = x(i) + dx * dt; % update state
    end
    data.train{j} = struct;
    data.train{j}.x = [x, x];
    data.train{j}.y = [x, x];
    data.train{j}.u = [u_vals, u_vals];
    data.train{j}.t = 
    
    
    % Plot results
    figure;
    subplot(2, 1, 1);
    plot(t, x);
    title('State x over time');
    xlabel('Time (s)');
    ylabel('x');
    
    subplot(2, 1, 2);
    plot(t, u);
    title('Input u over time');
    xlabel('Time (s)');
    ylabel('u = sin(t)');
end